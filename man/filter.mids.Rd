% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{filter.mids}
\alias{filter.mids}
\title{Subset rows of a `mids` object}
\usage{
\method{filter}{mids}(.data, ..., .preserve = FALSE)
}
\arguments{
\item{.data}{A `mids` object.}

\item{...}{Expressions that return a
logical value, and are defined in terms of the variables in `.data$data`.
If multiple expressions are specified, they are combined with the `&` operator.
Only rows for which all conditions evaluate to `TRUE` are kept.}

\item{.preserve}{Relevant when the \code{.data} input is grouped.
If \code{.preserve = FALSE} (the default), the grouping structure
is recalculated based on the resulting data, otherwise the grouping is kept as is.}
}
\value{
An S3 object of class `mids`
}
\description{
This function takes a `mids` object and returns a new
`mids` object that pertains to the subset of the data
identified by the expression in \dots. The expression may use
column values from the incomplete data in `.data$data`.
}
\note{
The function calculates a logical vector `include` of length `nrow(.data$data)`.
The function constructs the elements of the filtered `mids` object as follows:
\tabular{ll}{
`data`     \tab Select rows in `.data$data` for which `include == TRUE`\cr
`imp`      \tab Select rows each imputation `data.frame` in `.data$imp` for which `include == TRUE`\cr
`m`        \tab Equals `.data$m`\cr
`where`    \tab Select rows in `.data$where` for which `include == TRUE`\cr
`blocks`   \tab Equals `.data$blocks`\cr
`call`     \tab Equals `.data$call`\cr
`nmis`     \tab Recalculate `nmis` based on the selected `data` rows\cr
`method`   \tab Equals `.data$method`\cr
`predictorMatrix` \tab Equals `.data$predictorMatrix`\cr
`visitSequence`   \tab Equals `.data$visitSequence`\cr
`formulas`  \tab Equals `.data$formulas`\cr
`post`      \tab Equals `.data$post`\cr
`dots`     \tab Equals `.data$dots`\cr
`ignore`    \tab Select positions in `.data$ignore` for which `include == TRUE`\cr
`seed`            \tab Equals `.data$seed`\cr
`iteration`       \tab Equals `.data$iteration`\cr
`lastSeedValue`   \tab Equals `.data$lastSeedValue`\cr
`chainMean`       \tab Set to `NULL`\cr
`chainVar`        \tab Set to `NULL`\cr
`loggedEvents`    \tab Equals `.data$loggedEvents`\cr
`version`    \tab Replaced with current version\cr
`date`       \tab Replaced with current date
}
}
\examples{
imp <- mice(nhanes, m = 2, maxit = 1, print = FALSE)

# example with external logical vector
imp_f <- filter(imp, c(rep(TRUE, 13), rep(FALSE, 12)))

nrow(complete(imp))
nrow(complete(imp_f))

# example with calculated include vector
imp_f2 <- filter(imp, age >= 2 & hyp == 1)
nrow(complete(imp_f2)) # should be 5
}
\seealso{
[dplyr::filter()]
}
\author{
Patrick Rockenschaub
}
\keyword{manip}
