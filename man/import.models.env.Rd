% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.R
\name{import.models.env}
\alias{import.models.env}
\title{Convert a List of m-Lists Back to a Nested Environment}
\usage{
import.models.env(models_list)
}
\arguments{
\item{models_list}{A list where:
\itemize{
\item Each element corresponds to a task (e.g., "train" variables).
\item Each task contains a vector of \code{m} lists (one per imputation iteration).
\item Each list contains the stored objects for that iteration.
}}
}
\value{
A nested environment structured as:
\itemize{
\item \code{models_env$varname} (An environment for each task).
\item \code{models_env$varname$i} (Nested environments for each iteration).
\item Objects within each iteration are stored inside their respective environments.
}
}
\description{
Converts a structured list back into a nested environment where:
\itemize{
\item The first level contains task names (e.g., "train" variables).
\item The second level contains iteration indices (\code{1:m}).
\item The third level contains stored objects within each iteration.
}
}
\examples{
# Example list structure
models_list <- list(
  a = list(
    list(model = "Model A1"),
    list(model = "Model A2")
  ),
  b = list(
    list(model = "Model B1"),
    list()  # Empty list for missing iteration
  )
)

# Convert list to environment
models_env <- mice:::import.models.env(models_list)
print(ls(models_env))  # Should list "a" and "b"
print(ls(models_env$a))  # Should list "1" and "2"
print(models_env$a$`1`$model)  # Should be "Model A1"
}
\keyword{internal}
