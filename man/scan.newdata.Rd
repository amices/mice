% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\name{scan.newdata}
\alias{scan.newdata}
\title{Scan data types and compare to model expectations}
\usage{
scan.newdata(data, models, print = FALSE)
}
\arguments{
\item{data}{A \code{data.frame} to be checked.}

\item{models}{A list of trained models from \code{mice()}.}

\item{print}{Logical, whether to print the resulting table.}
}
\value{
A \code{data.frame} with one row per variable (from either \code{data} or \code{models})
and columns summarizing compatibility diagnostics. The following columns are included:

\tabular{ll}{
\code{variable}     \tab Variable name \cr
\code{in_data}      \tab Logical: whether variable is present in \code{data} \cr
\code{in_model}     \tab Logical: whether a trained model is available \cr
\code{data_class}   \tab Class of the variable in \code{data} (e.g., \code{"factor"}, \code{"ordered"}) \cr
\code{model_class}  \tab model class according to the trained model \cr
\code{class_match}  \tab \code{TRUE} if \code{data_class} matches \code{model_class}, \code{FALSE} otherwise \cr
\code{levels_match} \tab \code{TRUE} if factor levels exactly match, \code{FALSE} if they differ, \code{NA} if not applicable \cr
\code{pred_match}   \tab \code{TRUE} if all predictors used by the model are present in \code{data}, \code{FALSE} if any are missing, \code{NA} if unknown \cr
\code{can_fill}     \tab \code{TRUE} if there is a model, if classes match, if levels match and if predictor match, otherwise \code{FALSE} \cr
}
}
\description{
This function compares the structure and type of \code{data} to what is expected
from the trained \code{models}. It reports differences in class, levels, and predictor
availability, useful to prepare for imputation or prediction.
}
\examples{
# Train model on boys data
imp <- mice(boys, tasks = "train", m = 1, maxit = 1, print = FALSE)

# Create a new dataset with missing values and mismatched types
# remove ordering
data <- boys[1:3, ]
data$phb <- factor(data$phb, levels = levels(data$phb), ordered = FALSE)

# Run scan
scan.newdata(data, imp$models)

}
