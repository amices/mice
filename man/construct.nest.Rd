% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nest.R
\name{construct.nest}
\alias{construct.nest}
\title{Construct blocks from \code{formulas} and \code{predictorMatrix}}
\usage{
construct.nest(formulas = NULL, predictorMatrix = NULL)
}
\arguments{
\item{formulas}{A named list of formula's, or expressions that
can be converted into formula's by \code{as.formula}. List elements
correspond to blocks. The block to which the list element applies is
identified by its name, so list names must correspond to block names.
The \code{formulas} argument is an alternative to the
\code{predictorMatrix} argument that allows for more flexibility in
specifying imputation models, e.g., for specifying interaction terms.}

\item{predictorMatrix}{A square numeric matrix of \eqn{p} rows
and columns. Row- and column names are \code{colnames(data)}.
Each row corresponds to a variable to be imputed.
A value of \code{1} means that the column variable is a
predictor for the row variable, while a \code{0} means that
the column variable is not a predictor. The default
\code{predictorMatrix} is \code{1} everywhere, except for a zero
diagonal. For variables that need no be imputed,
\code{mice()} automatically sets the corresponding rows in the
\code{predictorMatrix} to zero. See details
on \emph{skipping imputation}.
Two-level imputation models (which have \code{"2l"} in their
names) other codes than \code{0} and \code{1}, e.g, \code{2} or \code{-2},
are also used.}
}
\value{
A \code{blocks} object.
}
\description{
This helper function attempts to find blocks of variables in the
specification of the \code{formulas} and/or \code{predictorMatrix}
objects. Blocks specified by \code{formulas} may consist of
multiple variables. Blocks specified by \code{predictorMatrix} are
assumed to consist of single variables. Any duplicates in names are
removed, and the formula specification is preferred.
\code{predictorMatrix} and \code{formulas}. When both arguments
specify models for the same block, the model for the
\code{predictMatrix} is removed, and priority is given to the
specification given in \code{formulas}.
}
\examples{
form <- list(bmi + hyp ~ chl + age, chl ~ bmi)
pred <- make.predictorMatrix(nhanes[, c("age", "chl")])
construct.blocks(formulas = form, pred = pred)
}
\seealso{
\code{\link[=make.blocks]{make.blocks()}}, \code{\link[=name.blocks]{name.blocks()}}
}
