% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/complete.R
\name{complete.mids}
\alias{complete.mids}
\alias{complete}
\title{Extracts the completed data from a `mids` object}
\usage{
\method{complete}{mids}(
  data,
  action = 1L,
  include = FALSE,
  mild = FALSE,
  order = c("last", "first"),
  ...
)
}
\arguments{
\item{data}{An object of class `mids` as created by the function
`mice()`.}

\item{action}{A numeric vector or a keyword. Numeric
values between 1 and `data$m` return the data with
imputation number `action` filled in. The value of `action = 0`
return the original data, with missing values. `action` can
also be one of the following keywords: `"all"`, `"long"`,
`"broad"` and `"repeated"`. See the Details section
for the interpretation.
The default is `action = 1L` returns the first imputed data set.}

\item{include}{A logical to indicate whether the original data with the missing
values should be included.}

\item{mild}{A logical indicating whether the return value should
always be an object of class `mild`. Setting `mild = TRUE`
overrides `action` keywords `"long"`, `"broad"`
and `"repeated"`. The default is `FALSE`.}

\item{order}{Either `"first"` or `"last"`. Only relevant when
`action == "long"`. Writes the `".imp"` and `".id"`
in columns 1 and 2. The default is `order = "last"`.
Included for backward compatibility with `"< mice 3.16.0"`.}

\item{\dots}{Additional arguments. Not used.}
}
\value{
Complete data set with missing values replaced by imputations.
A `data.frame`, or a list of data frames of class `mild`.
}
\description{
Takes an object of class `mids`, fills in the missing data, and returns
the completed data in a specified format.
}
\details{
The argument `action` can be length-1 character, which is
matched to one of the following keywords:
\describe{
\item{`"all"`}{produces a `mild` object of imputed data sets. When
`include = TRUE`, then the original data are appended as the first list
element;}
\item{`"long"`}{ produces a data set where imputed data sets
are stacked vertically. The columns are added: 1) `.imp`, integer,
referring the imputation number, and 2) `.id`, character, the row
names of `data$data`;}
\item{`"stacked"`}{ same as `"long"` but without the two
additional columns;}
\item{`"broad"`}{ produces a data set with where imputed data sets
are stacked horizontally. Columns are ordered as in the original data.
The imputation number is appended to each column name;}
\item{`"repeated"`}{ same as `"broad"`, but with
columns in a different order.}
}
}
\note{
Technical note: `mice 3.7.5` renamed the `complete()` function
to `complete.mids()` and exported it as an S3 method of the
generic `tidyr::complete()`. Name clashes between
`mice::complete()` and `tidyr::complete()` should no
longer occur.
}
\examples{

# obtain first imputed data set
sum(is.na(nhanes2))
imp <- mice(nhanes2, print = FALSE, maxit = 1)
dat <- complete(imp)
sum(is.na(dat))

# obtain stacked third and fifth imputation
dat <- complete(imp, c(3, 5))

# obtain all datasets, with additional identifiers
head(complete(imp, "long"))

# same, but now as list, mild object
dslist <- complete(imp, "all")
length(dslist)

# same, but also include the original data
dslist <- complete(imp, "all", include = TRUE)
length(dslist)

# select original + 3 + 5, store as mild
dslist <- complete(imp, c(0, 3, 5), mild = TRUE)
names(dslist)
}
\seealso{
[mice()], [`mids()`][mids-class]
}
\keyword{manip}
