% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as.R
\name{as.mids}
\alias{as.mids}
\title{Converts an imputed dataset (long format) into a \code{mids} object}
\usage{
as.mids(
  long,
  where = NULL,
  .imp = ".imp",
  .id = ".id",
  sort = TRUE,
  warn = getOption("mice.sort.warn", TRUE)
)
}
\arguments{
\item{long}{A multiply imputed data set in long format, including the
original dataset with missing values. For example, we can create such a
dataset by a call to \code{complete(..., action = 'long', include = TRUE)}.}

\item{where}{A data frame or matrix with logicals of the same dimensions
as \code{data} indicating where in the data the imputations should be
created. The default, \code{where = is.na(data)}, specifies that the
missing data should be imputed. The \code{where} argument may be used to
overimpute observed data, or to skip imputations for selected missing values.
Note: Imputation methods that generate imputations outside of
\code{mice}, like \code{mice.impute.panImpute()} may depend on a complete
predictor space. In that case, a custom \code{where} matrix can not be
specified.}

\item{.imp}{A column number or column name in \code{long},
indicating the imputation index. The values are assumed to be consecutive
integers between 0 and \code{m}. Values \code{1} through \code{m}
correspond to the imputation index, value \code{0} indicates
the original data (with missing data). The default column name is
\code{".imp"}.}

\item{.id}{An optional column number or column name in \code{long},
containing a row identifier. The default column name is
\code{".id"}.}

\item{sort}{A logical flag indicating whether the data should be sorted
by \code{.imp} and/or \code{.id} before creating the \code{mids} object.
Set \code{sort = FALSE} to skip sorting.}

\item{warn}{A logical flag indicating whether a warning should be issued
when the data is found to be unsorted and subsequently sorted. If set to
\code{TRUE}, a warning is displayed whenever sorting is performed. If set to
\code{FALSE}, no warning is issued. By default, the value is retrieved from
the global option \code{"mice.sort.warn"} using
\code{getOption("mice.sort.warn", TRUE)}. Users can globally enable or
disable this warning by setting the option
with \code{options(mice.sort.warn = TRUE)} or
\code{options(mice.sort.warn = FALSE)}.}
}
\value{
An object of class \code{mids}
}
\description{
The \code{as.mids()} function converts imputed data stored in long
format into a \code{mids} object. The original incomplete dataset
needs to be available so that the function knows where the missing data are.
The function is useful to convert back operations applied to
the imputed data back in a \code{mids} object. It may also be
used to store multiply imputed data sets from other software
into the format used by \code{mice}.
}
\details{
The function expects the input rows of \code{long} to be sorted by
the imputation index. By default, the imputation index is stored in
variable named \code{".imp"}), but you can change its name through the
\code{.imp} argument. Within each block, the function expects
the rows to be ordered in same sequence. If an \code{.id} variable is present,
the function will use it to resort the rows per imputation block before
creating the \code{mids} object.

The column names \code{".imp"} and \code{".id"} are reserved for the
imputation index and row identifier, respectively. If these columns are
present in \code{long}, they will be used as such, but they are not
included in the \code{mids} object. If you wish to preserve their values,
gives them a different name and specify the new name in the \code{.imp}
and \code{.id} arguments.
}
\examples{
# impute the nhanes dataset
imp <- mice(nhanes, print = FALSE)
# extract the data in long format
X <- complete(imp, action = "long", include = TRUE)
# create dataset with .imp variable as numeric
X2 <- X

# nhanes example without .id
test1 <- as.mids(X)
is.mids(test1)
identical(complete(test1, action = "long", include = TRUE), X)

# nhanes example without .id where .imp is numeric
test2 <- as.mids(X2)
is.mids(test2)
identical(complete(test2, action = "long", include = TRUE), X)

# nhanes example, where we explicitly specify .id as column 2
test3 <- as.mids(X, .id = ".id")
is.mids(test3)
identical(complete(test3, action = "long", include = TRUE), X)

# nhanes example with .id where .imp is numeric
test4 <- as.mids(X2, .id = 6)
is.mids(test4)
identical(complete(test4, action = "long", include = TRUE), X)

# example without an .id variable
# variable .id not preserved
X3 <- X[, -6]
test5 <- as.mids(X3)
is.mids(test5)
identical(complete(test5, action = "long", include = TRUE)[, -6], X[, -6])

# where argument copies also observed data into $imp element
where <- matrix(TRUE, nrow = nrow(nhanes), ncol = ncol(nhanes))
colnames(where) <- colnames(nhanes)
test11 <- as.mids(X, where = where)
identical(complete(test11, action = "long", include = TRUE), X)
}
\author{
Gerko Vink, Stef van Buuren
}
\keyword{mids}
