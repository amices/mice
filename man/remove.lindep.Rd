% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trim.predictors.R
\name{remove.lindep}
\alias{remove.lindep}
\title{Filter out constant and multicollinear predictors before imputations}
\usage{
remove.lindep(
  x,
  y,
  ry,
  eps = 1e-04,
  maxcor = 0.99,
  allow.na = TRUE,
  frame = 4,
  ...
)
}
\arguments{
\item{x}{Numeric design matrix with \code{length(y)} rows with predictors for
\code{y}. Matrix \code{x} may have no missing values.}

\item{y}{Vector to be imputed}

\item{ry}{Logical vector of length \code{length(y)} indicating the
the subset \code{y[ry]} of elements in \code{y} to which the imputation
model is fitted. The \code{ry} generally distinguishes the observed
(\code{TRUE}) and missing values (\code{FALSE}) in \code{y}.}

\item{eps}{numeric. The threshold for the ratio of the smallest to the
largest eigenvalue of the correlation matrix. The default is 1e-04. If the
user sets \code{eps = 0}, the function bypasses the filter.}

\item{maxcor}{numeric. The maximum correlation between a predictor and the
target variable. The default is 0.99.}

\item{allow.na}{logical. If \code{TRUE}, allow imputation of fully
missing \code{y}. This typically only occurs for passive imputation.
The default is \code{TRUE}.}

\item{frame}{integer. The frame number for logging. The default is 4.}

\item{...}{Other named arguments.}
}
\value{
A logical vector of length \code{ncol(x)} indicating which predictors
to keep.
}
\description{
\code{remove.lindep()} prevents multicollinearity
in the imputation model. It removes predictors that are constant or have
too high correlation with the target variable. The function
uses the eigenvalues of the correlation matrix to detect multicollinearity.
}
\details{
\code{remove.lindep()} is the classic MICE safety net to prevent
multicollinearity and other numerical problems. It is a far more
conservative filter than \code{lars.filter()}. The function is called
by \code{trim.predictors()}. The function is now deprecated, but
will remain part of the package for backward compatibility.
}
